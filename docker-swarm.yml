# This should be used to set up an 
# environment with this. 
services:
  db:
    restart: always
    image: postgres
    container_name: template_app_pg
    environment:
      - POSTGRES_USER=template_app_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=template_app_database
      - POSTGRES_CONNECTION_TIMEOUT=600
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - uat-network

  redis:
    image: 'bitnami/redis:latest'
    restart: always
    container_name: template_app_cache
    environment:
      - ALLOW_EMPTY_PASSWORD=true
    volumes:
      - redis-data:/data
    networks:
      - uat-network

  web: 
    image: ghcr.io/adamkali/template_app:${GIT_COMMIT_HASH:-latest}
    container_name: template_app_web
    ports:
      - mode: host
        protocol: tcp
        published: 5150
        target: 5150
    environment: 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_PASSWORD=${JWT_PASSWORD}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - REDIS_URL="http://template_app_cache:6379"
    deploy:
      update_config:
        order: start-first
    depends_on:
      - db
    networks:
      - uat-network

  echo:
    restart: always
    image: hashicorp/http-echo
    ports:
      - mode: host
        protocol: tcp 
        published: 11112
        target: 5678
    command: ["-text", "Hello from Docker Compose!"]
    networks:
      - uat-network

      
volumes:
  redis-data:
  pgadmin-data:
  pg-data:


networks:
  uat-network
    external: true 
